
ContactNode.h
typedef struct ContactNode
{
    char contactName[50];
    char contactPhoneNum[50];
    struct ContactNode *nextNodePtr;
} ContactNode;
ContactNode* CreateContactNode(char name[], char phone[]);
ContactNode* InsertContactAfter(ContactNode* head, ContactNode* temp);
ContactNode* GetNextContact();
void PrintContactNode();

ContactNode.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "ContactNode.h"

ContactNode* CreateContactNode(char name[], char phone[])
{
     ContactNode* temp = (ContactNode*)malloc(sizeof(ContactNode));
       strcpy(temp->contactName,  name);
       strcpy(temp->contactPhoneNum,  phone);
       temp->nextNodePtr = NULL;
       return temp;
    
}
//Insert a new node after node
ContactNode* InsertContactAfter(ContactNode* head, ContactNode* temp){
    ContactNode* temp2 = head;
        if(temp2->nextNodePtr != NULL){
            temp2 = temp2->nextNodePtr;
        }
        temp2->nextNodePtr = temp;
        temp->nextNodePtr = NULL;
        return head;
};
//Return location pointed by nextNodePtr
ContactNode *GetNextContact(){


};
//Name: Roxanne Hughes
//Phone number: 443-555-2864
void PrintContactNode(ContactNode* head)
{
    ContactNode* temp2 = head;
     printf("CONTACT LIST\n");
    while(temp2 != NULL){
       
        printf("Name: %s\n", temp2->contactName);
        printf("Phone number: %s\n", temp2->contactPhoneNum);
        printf("\n");
        temp2 = temp2->nextNodePtr;
    }
  
};


main.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "ContactNode.h"

int main(){
ContactNode* head = NULL;

for(int i = 1; i < 4; i++){
    char name[100];
    char phone[100];
    printf("Person %d\n", i);
    printf("Enter name:\n");
    gets(name);
    printf("Enter phone number:\n");
    gets(phone);
    printf("You entered: %s, %s\n", name , phone);
    printf("\n");
    if(head == NULL){
        head = CreateContactNode(name, phone);
    }
    else{
        ContactNode* end = CreateContactNode(name, phone);
        InsertContactAfter(head, end);
    }
}
    PrintContactNode(head);

}